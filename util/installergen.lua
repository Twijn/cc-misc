--- Installer Generator for CC-Misc Utilities
--- Interactive tool to generate custom installer scripts for ComputerCraft libraries
---
--- This tool provides a user-friendly interface to select multiple libraries from the cc-misc
--- repository and generates a single installer.lua file that will download all selected
--- libraries to your ComputerCraft computer.
---
---@usage
---wget https://raw.githubusercontent.com/Twijn/cc-misc/main/util/installergen.lua installergen.lua
---installergen.lua
---
-- @module installergen

local GITHUB_RAW_BASE = "https://raw.githubusercontent.com/Twijn/cc-misc/main/util/"

-- Available libraries with descriptions
local LIBRARIES = {
    {name = "cmd", description = "Command-line interface with REPL, autocompletion, and history"},
    {name = "formui", description = "Form-based UI builder for creating interactive forms"},
    {name = "log", description = "Logging utility with file and term output support"},
    {name = "persist", description = "Data persistence utility for saving/loading Lua tables"},
    {name = "s", description = "String manipulation utilities and extensions"},
    {name = "tables", description = "Table manipulation utilities (deep copy, merge, etc.)"},
    {name = "timeutil", description = "Time formatting and manipulation utilities"},
    {name = "shopk", description = "Kromer API client for shop integration"},
}

---Clear the terminal screen
local function clearScreen()
    term.clear()
    term.setCursorPos(1, 1)
end

---Print a header with color
---@param text string The header text
local function printHeader(text)
    term.setTextColor(colors.yellow)
    print("=" .. string.rep("=", #text) .. "=")
    print(" " .. text)
    print("=" .. string.rep("=", #text) .. "=")
    term.setTextColor(colors.white)
    print()
end

---Print colored text
---@param text string The text to print
---@param color number The color to use
local function printColored(text, color)
    term.setTextColor(color)
    print(text)
    term.setTextColor(colors.white)
end

---Display library selection menu
---@return table|nil Selected library names
local function selectLibraries()
    local selected = {}
    
    while true do
        clearScreen()
        printHeader("CC-Misc Installer Generator")
        
        print("Select libraries to include (space to toggle, enter to continue):\n")
        
        for i, lib in ipairs(LIBRARIES) do
            local marker = selected[lib.name] and "[X]" or "[ ]"
            local color = selected[lib.name] and colors.green or colors.white
            
            term.setTextColor(color)
            print(string.format("%d. %s %s", i, marker, lib.name))
            term.setTextColor(colors.lightGray)
            print(string.format("   %s", lib.description))
            term.setTextColor(colors.white)
        end
        
        print("\nQ. Quit")
        print("\nEnter number to toggle, or press Enter to continue:")
        
        local input = read()
        
        if input == "" then
            -- Check if at least one library is selected
            local count = 0
            for _ in pairs(selected) do count = count + 1 end
            
            if count > 0 then
                break
            else
                printColored("\nPlease select at least one library!", colors.red)
                sleep(2)
            end
        elseif input:lower() == "q" then
            return nil
        else
            local num = tonumber(input)
            if num and num >= 1 and num <= #LIBRARIES then
                local lib = LIBRARIES[num]
                selected[lib.name] = not selected[lib.name]
            end
        end
    end
    
    -- Convert selected table to array
    local selectedList = {}
    for name in pairs(selected) do
        table.insert(selectedList, name)
    end
    table.sort(selectedList)
    
    return selectedList
end

---Get installation directory from user
---@return string The installation directory
local function getInstallDir()
    clearScreen()
    printHeader("Installation Directory")
    
    print("Enter the directory where libraries should be installed:")
    print("(Leave empty for current directory)")
    print()
    
    local dir = read()
    if dir == "" then
        dir = "."
    end
    
    -- Remove trailing slash if present
    if dir:sub(-1) == "/" then
        dir = dir:sub(1, -2)
    end
    
    return dir
end

---Generate installer script content
---@param libraries table List of library names
---@param installDir string Installation directory
---@return string The installer script content
local function generateInstaller(libraries, installDir)
    local script = [[--- Auto-generated installer for CC-Misc utilities
--- Generated by installergen.lua
---
--- This script will download and install the following libraries:
]]

    for _, lib in ipairs(libraries) do
        script = script .. string.format("---   - %s\n", lib)
    end
    
    script = script .. [[---
--- Usage: lua installer.lua

local GITHUB_RAW_BASE = "https://raw.githubusercontent.com/Twijn/cc-misc/main/util/"
local INSTALL_DIR = "]] .. installDir .. [["

local LIBRARIES = {
]]

    for _, lib in ipairs(libraries) do
        script = script .. string.format('    "%s",\n', lib)
    end
    
    script = script .. [[}

local function printColored(text, color)
    term.setTextColor(color)
    print(text)
    term.setTextColor(colors.white)
end

local function downloadFile(url, filename)
    printColored("Downloading " .. filename .. "...", colors.yellow)
    
    local response = http.get(url)
    if not response then
        printColored("Failed to download " .. filename, colors.red)
        return false
    end
    
    local content = response.readAll()
    response.close()
    
    -- Create directory if needed
    if INSTALL_DIR ~= "." then
        fs.makeDir(INSTALL_DIR)
    end
    
    local filepath = INSTALL_DIR == "." and filename or (INSTALL_DIR .. "/" .. filename)
    local file = fs.open(filepath, "w")
    if not file then
        printColored("Failed to write " .. filename, colors.red)
        return false
    end
    
    file.write(content)
    file.close()
    
    printColored("âœ“ Installed " .. filename, colors.green)
    return true
end

-- Main installation process
print("CC-Misc Utilities Installer")
print("============================\n")

local success = 0
local failed = 0

for _, lib in ipairs(LIBRARIES) do
    local url = GITHUB_RAW_BASE .. lib .. ".lua"
    local filename = lib .. ".lua"
    
    if downloadFile(url, filename) then
        success = success + 1
    else
        failed = failed + 1
    end
end

print()
print("============================")
printColored(string.format("Installation complete: %d succeeded, %d failed", success, failed), 
    failed == 0 and colors.green or colors.yellow)

if failed == 0 then
    print("\nAll libraries installed successfully!")
    if INSTALL_DIR ~= "." then
        print("Libraries installed to: " .. INSTALL_DIR)
    end
else
    print("\nSome libraries failed to install. Check your internet connection.")
end
]]

    return script
end

---Main function
local function main()
    -- Check if we're in a ComputerCraft environment
    if not term or not colors then
        print("This script must be run in ComputerCraft!")
        return
    end
    
    -- Select libraries
    local selected = selectLibraries()
    if not selected then
        clearScreen()
        printColored("Installation cancelled.", colors.yellow)
        return
    end
    
    -- Get installation directory
    local installDir = getInstallDir()
    
    -- Generate installer
    clearScreen()
    printHeader("Generating Installer")
    
    print("Selected libraries:")
    for _, lib in ipairs(selected) do
        printColored("  â€¢ " .. lib, colors.green)
    end
    print()
    print("Installation directory: " .. installDir)
    print()
    
    local installerContent = generateInstaller(selected, installDir)
    
    -- Save installer
    local file = fs.open("installer.lua", "w")
    if not file then
        printColored("Failed to create installer.lua!", colors.red)
        return
    end
    
    file.write(installerContent)
    file.close()
    
    printColored("\nâœ“ Installer generated successfully!", colors.green)
    print("\nTo install the selected libraries, run:")
    printColored("  lua installer.lua", colors.yellow)
    print()
end

-- Run the main function
main()
